Python 3.10.0 for RISC OS
-------------------------
Port by Chris Johns, development supported by RISC OS Developments Ltd.

Welcome to Python on RISC OS, bringing the power and flexibility of the Python language to RISC OS.

This document does not go into any detail about the python programming language itself, but details the RISC OS specific items. There are lots of documents and tutorials online and in books about Python itself.

Python can be obtained with the !PackMan package manager.

Mailing List
------------
There is a riscos-python mailing list https://www.freelists.org/riscos-python for discussions about the python on RISC OS.

Feedback and bugs
-----------------
Plese send any feedback or bug reports to chris@lessthan3.org.uk

Filetypes
---------
One of the major differences between RISC OS and other operating systems is the use of filetypes rather than extensions to identify the content of a file, and the use of the . as a directory separator.

So on Linux a Python file may be named spam.py (file spam with extension of .py), on RISC OS 'spam.py' would mean the file called py in directory spam, which is almost certainly not what you want!

So the 'RISC OS way' is to have a file called spam with the filetype of Python. To assist with running code from other platforms, you can also call the file spam/py (with any type). As long as !Python has been 'seen', double-clicking on a Python file will run it in a TaskWindow.

Types are also used for the cached bytecode (.pyc) and extensions (.so).


The subprocess module on RISC OS
--------------------------------
Limited subprocess support is provided using the TaskRunner module to execute subprocesses using the RISC OS TaskWindow susyem.

RISC OS additions
-----------------
os.get_filetype(object) returns the file type of a given object.
os.set_filetype(object,type) will set it.

swi.swi(arg1,arg2,arg3) allows Python code to call RISC OS SWIs.
  arg1 is the SWI number or name,
  arg2 is a format string for arg3,
  arg3 is the rest of the arguments.
eg: swi.swi("OS_Write0","s","Hello RISC OS World")

stat will also return st_loadaddr (Load Address), st_execaddr (Exex Address), st_filetype (Filetype), and st_objtype (Object type)

Known Bugs
----------
Much of the standard library is still largely untested.

History
-------
3.10.0-1 RISC OS port of 3.10a5
